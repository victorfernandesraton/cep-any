{"version":3,"sources":["../../../src/service/correios/adapters.mjs"],"sourcesContent":["import { Cep } from \"../../entity/index.mjs\"\nimport { ParserError } from \"../../errors/parserError.mjs\"\n\nexport function parseParamsToXML(data) {\n\treturn `<?xml version=\"1.0\"?>\\n\t<soapenv:Envelope \t\txmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:cli=\"http://cliente.bean.master.sigep.bsb.correios.com.br/\">  <soapenv:Header />  <soapenv:Body>    <cli:consultaCEP>      <cep>${data}</cep>    </cli:consultaCEP>  </soapenv:Body></soapenv:Envelope>`\n}\n\nexport function responseToCep(data) {\n\ttry {\n\t\tconst returnStatement =\n\t\t\tdata.replace(/\\r?\\n|\\r/g, \"\").match(/<return>(.*)<\\/return>/)?.[0] ?? \"\"\n\t\tif (returnStatement == \"\") {\n\t\t\t// TODO: create api enuns\n\t\t\tthrow new ParserError(`invalid regex got ${data}`, \"correios\")\n\t\t}\n\t\tconst cleanReturnStatement = returnStatement\n\t\t\t.replace(\"<return>\", \"\")\n\t\t\t.replace(\"</return>\", \"\")\n\t\tconst parsedReturnStatement = cleanReturnStatement\n\t\t\t.split(/</)\n\t\t\t.reduce((result, exp) => {\n\t\t\t\tconst splittenExp = exp.split(\">\")\n\t\t\t\tif (splittenExp.length > 1 && splittenExp[1].trim().length) {\n\t\t\t\t\tresult[splittenExp?.[0]] = splittenExp[1]\n\t\t\t\t}\n\t\t\t\treturn result\n\t\t\t}, {})\n\n\t\tif (parsedReturnStatement?.cep === \"\" || !parsedReturnStatement?.cep) {\n\t\t\tthrow new ParserError(\"not returnd a cep to parse\", \"correios\")\n\t\t}\n\t\treturn Cep.create({\n\t\t\tcep: parsedReturnStatement.cep ?? \"\",\n\t\t\tstate: parsedReturnStatement.uf ?? \"\",\n\t\t\tcity: parsedReturnStatement.cidade ?? \"\",\n\t\t\tstreet: parsedReturnStatement.bairro ?? \"\",\n\t\t\tneighborhood: parsedReturnStatement.end ?? \"\",\n\t\t})\n\t} catch (e) {\n\t\tthrow new ParserError(\"not implement xml\", \"correios\")\n\t}\n}\n"],"names":["parseParamsToXML","responseToCep","data","returnStatement","replace","match","ParserError","cleanReturnStatement","parsedReturnStatement","split","reduce","result","exp","splittenExp","length","trim","cep","Cep","create","state","uf","city","cidade","street","bairro","neighborhood","end","e"],"mappings":"AAAA,iHAAoB,wBAAwB,UAChB,8BAA8B,oEADtC,wBAAwB,CAChB,8BAA8B,yVAE1CA,gBAAgB,KAAhBA,gBAAgB,CAIhBC,aAAa,KAAbA,aAAa,EAJtB,UAASD,gBAAgB,CAACE,IAAI,CAAE,CACtC,MAAO,CAAC;qNAA4O,EAAEA,IAAI,CAAC,gEAAgE,CAAC,CAC5T,AAEM,SAASD,aAAa,CAACC,IAAI,CAAE,CACnC,GAAI,KAEFA,GAA6D,AAD9D,OAAMC,eAAe,CACpBD,CAAAA,CAAAA,GAA6D,CAA7DA,IAAI,CAACE,OAAO,aAAc,EAAE,CAAC,CAACC,KAAK,0BAA0B,OAAK,CAAlEH,KAAAA,CAAkE,CAAlEA,GAA6D,AAAE,CAAC,CAAC,CAAC,CAAA,EAAI,EAAE,AACzE,IAAIC,eAAe,EAAI,EAAE,CAAE,CAE1B,MAAM,IAAIG,eAAW,YAAA,CAAC,CAAC,kBAAkB,EAAEJ,IAAI,CAAC,CAAC,CAAE,UAAU,CAAC,CAC9D,AACD,MAAMK,oBAAoB,CAAGJ,eAAe,CAC1CC,OAAO,CAAC,UAAU,CAAE,EAAE,CAAC,CACvBA,OAAO,CAAC,WAAW,CAAE,EAAE,CAAC,AAC1B,OAAMI,qBAAqB,CAAGD,oBAAoB,CAChDE,KAAK,KAAK,CACVC,MAAM,CAAC,CAACC,MAAM,CAAEC,GAAG,GAAK,CACxB,MAAMC,WAAW,CAAGD,GAAG,CAACH,KAAK,CAAC,GAAG,CAAC,AAClC,IAAII,WAAW,CAACC,MAAM,CAAG,CAAC,EAAID,WAAW,CAAC,CAAC,CAAC,CAACE,IAAI,EAAE,CAACD,MAAM,CAAE,CAC3DH,MAAM,CAACE,WAAW,MAAK,CAAhBA,KAAAA,CAAgB,CAAhBA,WAAW,AAAE,CAAC,CAAC,CAAC,CAAC,CAAGA,WAAW,CAAC,CAAC,CAAC,CACzC,AACD,OAAOF,MAAM,CACb,CAAE,EAAE,CAAC,AAEP,IAAIH,CAAAA,qBAAqB,MAAK,CAA1BA,KAAAA,CAA0B,CAA1BA,qBAAqB,CAAEQ,GAAG,CAAA,GAAK,EAAE,EAAI,CAACR,CAAAA,qBAAqB,MAAK,CAA1BA,KAAAA,CAA0B,CAA1BA,qBAAqB,CAAEQ,GAAG,CAAA,CAAE,CACrE,MAAM,IAAIV,eAAW,YAAA,CAAC,4BAA4B,CAAE,UAAU,CAAC,CAC/D,AACD,OAAOW,SAAG,IAAA,CAACC,MAAM,CAAC,CACjBF,GAAG,CAAER,qBAAqB,CAACQ,GAAG,EAAI,EAAE,CACpCG,KAAK,CAAEX,qBAAqB,CAACY,EAAE,EAAI,EAAE,CACrCC,IAAI,CAAEb,qBAAqB,CAACc,MAAM,EAAI,EAAE,CACxCC,MAAM,CAAEf,qBAAqB,CAACgB,MAAM,EAAI,EAAE,CAC1CC,YAAY,CAAEjB,qBAAqB,CAACkB,GAAG,EAAI,EAAE,CAC7C,CAAC,CACF,AAAC,MAAOC,CAAC,CAAE,CACX,MAAM,IAAIrB,eAAW,YAAA,CAAC,mBAAmB,CAAE,UAAU,CAAC,CACtD,CACD,EAAA"}