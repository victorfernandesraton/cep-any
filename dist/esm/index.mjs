var g=Object.defineProperty;var q=(s,e,t)=>e in s?g(s,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):s[e]=t;var w=(s,e,t)=>(q(s,typeof e!="symbol"?e+"":e,t),t);var u=class extends Error{constructor(e){super(e)}};var l=class extends u{constructor(e){super(`invalid params ${e}`)}};function n({url:s,body:e,headers:t,method:r,params:a}){let x=new URLSearchParams(a),i={method:r,body:e,headers:t},P=`${s}?${x.toString()}`;return fetch(P,i)}var o=class{constructor(e){this.api=e;this.api=e,this.requester=n}baseUrl="";requester;overrideRequest(e){this.requester=e}static generalParse(e){return e.replaceAll("-","").replaceAll(".","")}static validateCep(e){return/[0-9]{8}/.test(e)}async execute(e){let t="";typeof e=="number"?t=e.toString():t=e;let r=o.generalParse(t);if(!o.validateCep(r))throw new l(r);return this.handler(r)}};var c=class{services;constructor(e){this.services=e}async execute(e){return await Promise.any(this.services.map(r=>r.execute(e)))}};var d=class extends o{constructor(){super("apicep"),this.baseUrl="https://ws.apicep.com/cep.json"}async handler(e){let t=await n({url:this.baseUrl,params:{code:e}}),r=await t.json();if(!t.ok)throw new Error(r);return{cep:r.code.replaceAll("-",""),city:r.city,state:r.state,neighborhood:r.district??"",street:r.address}}};var h=class extends o{constructor(){super("brasilAPI"),this.baseUrl="https://brasilapi.com.br/api/cep/v1/"}async handler(e){let t=await this.requester({url:`${this.baseUrl}/${e}`}),r=await t.json();if(!t.ok)throw new Error(r);return{...r}}};var p=class extends Error{api;constructor(e,t){t?super(t):super(),this.api=e}};function b(s){return`<?xml version="1.0"?>
	<soapenv:Envelope 		xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:cli="http://cliente.bean.master.sigep.bsb.correios.com.br/">  <soapenv:Header />  <soapenv:Body>    <cli:consultaCEP>      <cep>${s}</cep>    </cli:consultaCEP>  </soapenv:Body></soapenv:Envelope>`}function y(s){try{let e=s.replace(/\r?\n|\r/g,"").match(/<return>(.*)<\/return>/)?.[0]??"";if(e=="")throw new p(`invalid regex got ${s}`,"correios");let r=e.replace("<return>","").replace("</return>","").split(/</).reduce((a,x)=>{let i=x.split(">");return i.length>1&&i[1].trim().length&&(a[i?.[0]]=i[1]),a},{});if(r?.cep===""||!r?.cep)throw new p("not returnd a cep to parse","correios");return{cep:r.cep??"",state:r.uf??"",city:r.cidade??"",street:r.bairro??"",neighborhood:r.end??""}}catch{throw new p("not implement xml","correios")}}var f=class extends o{constructor(){super("correios"),this.baseUrl="https://apps.correios.com.br"}async handler(e){let t=await this.requester({url:`${this.baseUrl}/SigepMasterJPA/AtendeClienteService/AtendeCliente`,body:b(e),method:"POST",headers:{"Content-Type":"application/xml"}}),r=await t.text();if(!t.ok)throw new Error(r);return y(r)}};var m=class extends o{constructor(){super("viacep"),this.baseUrl="https://viacep.com.br"}async handler(e){let t=await this.requester({url:`${this.baseUrl}/ws/${e}/json`,method:"GET"}),r=await t.json();if(!t.ok)throw new Error(r);return{cep:r?.cep?.replace("-","")??"",state:r?.uf??"",city:r?.localidade??"",street:r?.logradouro??"",neighborhood:r?.bairro??""}}};w(m,"baseUrl");function v({useDefaultProviders:s=!0,custonProviders:e,requester:t=n}){let r=[];return s&&(r=[new m,new h,new d,new f]),e?.length&&(r=[...r,...e]),t&&(r=[...r.map(a=>(a.overrideRequest(t),a))]),new c(r)}var R=s=>v({useDefaultProviders:!0}).execute(s);export{o as CepService,c as Provider,n as Requester,R as cep,v as factory};
